<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Validation\ValidationException;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Throwable;

class Handler extends ExceptionHandler
{
    public function register(): void
    {
        $this->renderable(function (Throwable $e, $request) {
            if ($request->is('api/*') || $request->wantsJson()) {
                return $this->handleApiException($e);
            }
        });
    }

    private function handleApiException($e)
    {
        $status = match(true) {
            $e instanceof ValidationException => 422,
            $e instanceof AuthenticationException => 401,
            $e instanceof ModelNotFoundException => 404,
            $e instanceof NotFoundHttpException => 404,
            default => 500
        };

        return response()->json([
            'message' => $status === 500 ? 'Server Error' : $e->getMessage(),
            'errors' => method_exists($e, 'errors') ? $e->errors() : null
        ], $status);
    }
}












{
    "company_name": "Test Company",
    "company_email": "company@test.com",
    "name": {{$randomFullName}},
    "email": {{$randomEmail}},
    "password": {{password}},
    "password_confirmation": {{password}}
}